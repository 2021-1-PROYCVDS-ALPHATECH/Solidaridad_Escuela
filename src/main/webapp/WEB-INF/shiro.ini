# =======================
# Shiro INI configuration
# =======================

[main]
# Objects and their properties are defined here,
# Such as the securityManager, Realms and anything
# else needed to build the SecurityManager

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT clave FROM Usuarios WHERE nombre = ?
jdbcRealm.userRolesQuery = SELECT rol FROM Usuarios WHERE nombre = ?

# Configuration database
ds = org.postgresql.ds.PGPoolingDataSource
ds.serverName = ec2-54-87-112-29.compute-1.amazonaws.com
ds.databaseName = d51irtfbr1rm3a
ds.ssl = false
ds.portNumber = 5432
ds.user = bmfrrjfohnqgff
ds.password = 11a53677044c9c4746373f1893c87ade96495e0f91d27bb9d959b3290eacdfd8
jdbcRealm.dataSource = $ds

authc.loginUrl = /faces/login.xhtml

#default hash algorithm is SHA-256
#passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
#passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordMatcher = edu.eci.cvds.view.CustomPasswordMatcher
passwordService = edu.eci.cvds.view.CustomPasswordService
passwordMatcher.passwordService = $passwordService
jdbcRealm.credentialsMatcher = $passwordMatcher

# only not autenticated,  path of you filter(filter to "block" login.xhtml page to logged users , they have to logout to use login.xhtml page.)
#path of you filter
onlynot = edu.eci.cvds.security.OnlyNotAuthenticated
onlynot.welcomeurl = /faces/index.xhtml

builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager
securityManager.realms = $jdbcRealm


[urls]
# The 'urls' section is used for url-based security
# in web applications.  We'll discuss this section in the
# Web documentation

faces/Roles/** = authc

/index.xhtml = logout
/faces/login.xhtml = onlynot
