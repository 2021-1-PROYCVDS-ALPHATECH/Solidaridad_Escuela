# =======================
# Shiro INI configuration
# =======================

[main]
# Objects and their properties are defined here,
# Such as the securityManager, Realms and anything
# else needed to build the SecurityManager

jdbcRealm = org.apache.shiro.realm.jdbc.jdbcRealm

jdbcRealm.authenticationQuery = SELECT clave FROM Usuarios WHERE nombre = ?
jdbcRealm.userRolesQuery = SELECT rol FROM Usuarios WHERE nombre = ? GROUP BY rol

# Configuration database
ds = org.postgresql.ds.PGPoolingDataSource
ds.serverName = ec2-34-233-0-64.compute-1.amazonaws.com
ds.databaseName = d7ao2add080r04
ds.ssl = true
ds.sslFactory = org.postgresql.ssl.NonValidatingFactory
ds.portNumber = 5432
ds.user = qppagsvnpgnjtr
ds.password = df8ccdb97c878d3422f88bdad422ce1eea8d98a2807b8fe6171f70114ca5e304
jdbcRealm.dataSource = $ds

authc.loginUrl = /faces/login.xhtml

#default hash algorithm is SHA-256
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordMatcher.passwordService = $passwordService
jdbcRealm.credentialsMatcher = $passwordMatcher

# only not autenticated,  path of you filter(filter to "block" login.xhtml page to logged users , they have to logout to use login.xhtml page.)
#path of you filter
onlynot = edu.eci.cvds.security.OnlyNotAutenticated
onlynot.welcomeurl = /faces/index.html

builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager

[users]
# The 'users' section is for simple deployments
# when you only need a small number of statically-defined
# set of User accounts.

[roles]
# The 'roles' section is for simple deployments
# when you only need a small number of statically-defined
# roles.

[urls]
# The 'urls' section is used for url-based security
# in web applications.  We'll discuss this section in the
# Web documentation
/faces/login.xhtml = authc
/=logout

/=onlynot
/login.xhtml = onlynot
